name: Publish-AadAuthenticationFactory
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "publishToGallery"
  publishToGallery:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      uses: actions/checkout@v3

    - name: Build Module
      shell: pwsh
      run: |
        Copy-Item -Path "$env:GITHUB_WORKSPACE\LICENSE" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\LICENSE.txt" -Force

    - name: Sign files
      shell: pwsh
      env:
        CERTPASS: ${{secrets.GC_SIGNING_CERT_PASSWORD}}
        SIGNCERT: ${{secrets.GC_SIGNING_CERT}}
      run: |
        try
        {
          $buffer = [System.Convert]::FromBase64String($env:SIGNCERT)
          $certificate = [System.Security.Cryptography.X509Certificates.X509Certificate2]::New($buffer, $env:CERTPASS)
          #sign powershell files
          Get-ChildItem "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory" `
            -File `
            -Recurse `
            -Include *.ps1, *.ps1xml, *.psd1, *.psm1, *.pssc, *.psrc, *.cdxml `
          | Set-AuthenticodeSignature `
              -HashAlgorithm SHA256 `
              -Certificate $certificate `
              -TimestampServer http://timestamp.digicert.com  `
          | Select-Object Path,Status `
          | Format-List
          
        }
        catch
        {
          Write-Host "Error: $($_.Exception)"
          throw
        }

    - name: Publish
      #Publish to PS Gallery
      shell: pwsh
      env:
        SECRET: ${{ secrets.PSGallery_APIKey }}
      run: |
        write-host "Publishing from: $env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory"
        try
        {
          $env:PSModulePath = "$env:PSModulePath;$env:GITHUB_WORKSPACE\Module"
          "PSModulePath: $env:PSModulePath"
          Publish-Module -Path "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory" -NuGetApiKey "$env:SECRET"
        }
        catch
        {
          Write-Host "Error: $($_.Exception)"
          throw
        }

    - name: Create Release
      #Create a release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        draft: false
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        name: Release ${{ github.ref }}   