name: Publish-AadAuthenticationFactory
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "publishToGallery"
  publishToGallery:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
    - uses: nuget/setup-nuget@v1
      with:
        nuget-version: 'latest'
        
    - name: Build Module
      shell: pwsh
      run: |
        "Copying license file"
        Copy-Item -Path "$env:GITHUB_WORKSPACE\LICENSE" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\LICENSE.txt" -Force
        "Building module"
        &"$env:GITHUB_WORKSPACE\Commands\BuildModule.ps1" -RootPath "$env:GITHUB_WORKSPACE"
        "Restoring packages"
        &"$env:GITHUB_WORKSPACE\nuget.exe" restore --packagesDirectory "$env:GITHUB_WORKSPACE\packages"
        "Updating packages in the module"
        $packages = ([xml](get-content -path .\packages.config -raw)).packages.package

        $pkg = $packages | where-object{$_.id -eq "Microsoft.Identity.Client"}
        $pkg.id
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\net461\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\net461" -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\net6.0\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\net6.0" -Force
      
        $pkg = $packages | where-object{$_.id -eq "Microsoft.IdentityModel.Abstractions"}
        $pkg.id
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\net461\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\net461" -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\net6.0\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\net6.0" -Force
      
        $pkg = $packages | where-object{$_.id -eq "Microsoft.Identity.Client.NativeInterop"}
        $pkg.id
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\net461\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\net461" -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\netstandard2.0\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\netstandard2.0" -Force
        #runtimes for native interop
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\runtimes -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\runtimes -recurse

        $pkg = $packages | where-object{$_.id -eq "Microsoft.Identity.Client.Broker"}
        $pkg.id
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\net461\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\net461" -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE\packages\$($pkg.id)`.$($pkg.version)\lib\netstandard2.0\$($pkg.id)`.dll" -Destination "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory\shared\netstandard2.0" -Force

        dir $env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory -recurse
    - name: Sign files
      shell: pwsh
      if: ${{ github.event_name != 'workflow_dispatch' }}
      env:
        CERTPASS: ${{secrets.GC_SIGNING_CERT_PASSWORD}}
        SIGNCERT: ${{secrets.GC_SIGNING_CERT}}
      run: |
        try
        {
          $buffer = [System.Convert]::FromBase64String($env:SIGNCERT)
          $certificate = [System.Security.Cryptography.X509Certificates.X509Certificate2]::New($buffer, $env:CERTPASS)
          #sign powershell files
          Get-ChildItem "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory" `
            -File `
            -Recurse `
            -Include *.ps1, *.ps1xml, *.psd1, *.psm1, *.pssc, *.psrc, *.cdxml `
          | Set-AuthenticodeSignature `
              -HashAlgorithm SHA256 `
              -Certificate $certificate `
              -TimestampServer http://timestamp.digicert.com  `
          | Select-Object Path,Status `
          | Format-List
          
        }
        catch
        {
          Write-Host "Error: $($_.Exception)"
          throw
        }

    - name: Publish
      #Publish to PS Gallery
      shell: pwsh
      if: ${{ github.event_name != 'workflow_dispatch' }}
      env:
        SECRET: ${{ secrets.PSGallery_APIKey }}
      run: |
        write-host "Publishing from: $env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory"
        try
        {
          $env:PSModulePath = "$env:PSModulePath;$env:GITHUB_WORKSPACE\Module"
          "PSModulePath: $env:PSModulePath"
          Publish-Module -Path "$env:GITHUB_WORKSPACE\Module\AadAuthenticationFactory" -NuGetApiKey "$env:SECRET"
        }
        catch
        {
          Write-Host "Error: $($_.Exception)"
          throw
        }

    - name: Create Release
      #Create a release
      id: create_release
      if: ${{ github.event_name != 'workflow_dispatch' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        draft: false
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        name: Release ${{ github.ref }}   